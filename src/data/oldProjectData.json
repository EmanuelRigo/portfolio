{
  "masterQuiz": {
    "title": "MasterQuiz",
    "short": "Poné a prueba tus conocimientos con MasterQuiz.",
    "modal": "MasterQuiz es una aplicación SPA desarrollada con React y Vite. Utiliza React Router para navegación, Bootstrap para estilos y está pensada para ofrecer una experiencia de trivia interactiva y educativa.",
    "testUsers": "Ingresá directamente y comenzá a jugar sin necesidad de registrarte.",
    "features": [
      "Variedad de Preguntas: Amplia selección de categorías y niveles.",
      "Sistema de Puntaje: Seguimiento en tiempo real del rendimiento.",
      "Navegación Rápida: Uso de React Router para una experiencia fluida.",
      "Diseño Responsivo: Interfaz adaptable con Bootstrap y React-Bootstrap.",
      "Componentes Reutilizables: Desarrollo organizado y escalable.",
      "Configuración Moderna: Vite para un entorno de desarrollo ágil."
    ],
    "description": "Aplicación de preguntas y respuestas para desafiar tus conocimientos.",
    "image": "/images/projects/masterquiz_01.png",
    "techStack": [
      "ReactJS",
      "Vite",
      "Bootstrap",
      "React Bootstrap",
      "React Router",
      "JavaScript"
    ],
    "liveLinks": [
      {
        "label": "Producción",
        "url": "https://masterquiz.vercel.app/"
      }
    ],
    "repoLink": "https://github.com/EmanuelRigo/MasterQuiz"
  },
  "todoList": {
    "title": "ToDoList",
    "short": "Organizá tus tareas con esta app Full-Stack moderna.",
    "modal": "ToDoList es una aplicación web Full-Stack desarrollada con Next.js, TypeScript, Prisma y Tailwind CSS. Permite gestionar tareas personales mediante una interfaz intuitiva y un backend robusto que utiliza API Routes y SQLite como base de datos. Practica para entender los conceptos de NextJs.",
    "testUsers": "No requiere usuarios. Ejecutá localmente para probar el CRUD de tareas.",
    "features": [
      "CRUD de Tareas: Crear, leer, editar y eliminar tareas.",
      "Frontend con Next.js: UI reactiva, rápida y responsiva.",
      "Tailwind CSS: Estilizado moderno y limpio.",
      "Backend con Prisma y SQLite: Persistencia de datos sencilla y eficiente.",
      "API Routes: Manejo del backend directamente desde Next.js.",
      "Organización Clara: Separación de lógica, rutas, componentes y base de datos."
    ],
    "description": "App Full-Stack con Next.js y Prisma para gestión de tareas.",
    "image": "/images/projects/NextCRUD.png",
    "techStack": ["NextJS", "TypeScript", "Tailwind", "NodeJS", "SQL"],
    "liveLinks": [
      {
        "label": "Repositorio",
        "url": "https://to-do-list-next-js-prisma-ts.vercel.app/"
      }
    ],
    "repoLink": "https://github.com/EmanuelRigo/ToDoList-NextJS-prisma-TS"
  },
  "etechStore": {
    "title": "E-TechStore",
    "short": "Explorá y comprá productos tecnológicos en E-TechStore.",
    "modal": "E-TechStore es una aplicación de e-commerce Full-Stack desarrollada con React y Firebase. Permite a los usuarios explorar un catálogo de productos, gestionar un carrito y simular una compra. Está diseñada con una arquitectura moderna, utilizando Firestore como base de datos en la nube.",
    "testUsers": "Podés ingresar sin necesidad de crear una cuenta. El checkout es simulado.",
    "features": [
      "Catálogo de Productos: Lista con imágenes, precios y descripciones.",
      "Detalle de Producto: Información individual de cada ítem.",
      "Carrito de Compras: Añadí, eliminá y modificá productos fácilmente.",
      "Navegación por Categorías: Exploración rápida por tipo de producto.",
      "Checkout Simulado: Proceso de compra con formulario de cliente.",
      "Firebase Firestore: Backend en tiempo real para productos y órdenes."
    ],
    "description": "Tienda online de tecnología con React y Firebase como backend.",
    "image": "/images/projects/e-techstore_03.png",
    "techStack": [
      "ReactJS",
      "Firebase",
      "Bootstrap",
      "React Bootstrap",
      "React Router"
    ],
    "liveLinks": [
      {
        "label": "Producción",
        "url": "https://e-techstore.vercel.app/"
      }
    ],
    "repoLink": "https://github.com/EmanuelRigo/E-TechStore"
  },
  "labCoderhouse": {
    "title": "Projecto SQL laboratorio coderhouse",
    "short": "Sistema integral de gestión de laboratorios clínicos.",
    "modal": "Laboratorio Coderhouse es un sistema de base de datos completo que gestiona turnos, pacientes, resultados, pagos y personal médico. Implementado en MySQL, cuenta con procedimientos almacenados, funciones, triggers y vistas para optimizar la operación de un laboratorio clínico, con control de acceso por roles y respaldado por scripts y contenedores Docker.",
    "testUsers": "Usuarios: juan_duenio@localhost / Contraseña: labcoder",
    "features": [
      "Gestión de Turnos: Automatiza la reserva, asignación y seguimiento.",
      "Control de Resultados: Inserción y actualización de resultados con control de acceso.",
      "Gestión de Usuarios y Roles: Accesos diferenciados según el perfil del usuario.",
      "Pagos y Facturación: Registro y reporte de operaciones por tipo de pago y fecha.",
      "Scripts SQL: Estructura modular con triggers, procedures y funciones.",
      "Integración Docker: Fácil despliegue y testing con contenedores.",
      "Reportes y Vistas: Visualización clara del estado de los estudios y pagos."
    ],
    "description": "Sistema de gestión de laboratorios desarrollado como entrega final para el curso de SQL en Coderhouse.",
    "image": "/images/projects/SQL coder.png",
    "techStack": ["MySQL", "Docker", "DBeaver", "GitHub", "Drawio"],
    "repoLink": "https://github.com/EmanuelRigo/entrega-final-sql-coderhouse"
  },
  "labFrontend": {
    "title": "Laboratorio Clínico",
    "short": "Consultá análisis y datos personales desde el navegador.",
    "modal": "Laboratorio Clínico es una aplicación desarrollada con HTML, CSS y JavaScript que permite la gestión de pacientes y la consulta de resultados clínicos. Utiliza Firebase como backend para autenticación y almacenamiento de datos en tiempo real. Es un proyecto orientado a brindar una solución simple, funcional y accesible desde el navegador.",
    "testUsers": "Usuario de prueba: maira.lab / Contraseña: 8787",
    "features": [
      "Gestión de Pacientes: Alta, consulta y visualización de información.",
      "Consulta de Resultados: Visualización segura de análisis clínicos.",
      "Autenticación Firebase: Registro e inicio de sesión de pacientes.",
      "UI Intuitiva: Interfaz construida con HTML, CSS y JavaScript puro.",
      "Accesibilidad: Sin necesidad de instalación ni frameworks externos.",
      "Estructura Clara: Separación de lógica, estilos y vistas en carpetas dedicadas."
    ],
    "description": "Proyecto frontend con Firebase para gestión de pacientes y análisis clínicos.",
    "image": "/images/projects/lab 04.png",
    "techStack": ["HTML", "CSS", "JavaScript", "Firebase"],
    "liveLinks": [
      {
        "label": "Repositorio",
        "url": "https://lab-paroti.netlify.app/"
      }
    ],
    "repoLink": "https://github.com/EmanuelRigo/lab"
  },
  "tesloShop": {
    "title": "Teslo-Shop",
    "short": "Tienda virtual moderna con carrito de compras y diseño responsivo.",
    "modal": "Teslo-Shop es una tienda online desarrollada con Next.js, TypeScript y Tailwind CSS. Permite explorar productos, ver sus detalles y agregarlos a un carrito de compras. Su estructura limpia, responsiva y modular está pensada para ser una base sólida en proyectos de e-commerce modernos. Practica para entender NextJs con TypeScript.",
    "testUsers": "No requiere autenticación. Iniciá la app y explorá libremente.",
    "features": [
      "Catálogo de Productos: Exploración visual y descriptiva.",
      "Páginas de Detalle: Información ampliada de cada producto.",
      "Carrito de Compras: Añadir, quitar y gestionar productos fácilmente.",
      "Diseño Responsivo: Adaptado a desktop, tablet y mobile.",
      "Estado Global con Zustand: Gestión de carrito eficiente.",
      "Modular y Escalable: Separación clara entre vistas, componentes y lógica."
    ],
    "description": "Proyecto e-commerce con Next.js y Zustand para la gestión del carrito.",
    "image": "/images/projects/teslo-shop 00.png",
    "techStack": ["NextJS", "TypeScript", "Tailwind", "Zustand"],
    "liveLinks": [
      {
        "label": "Repositorio",
        "url": "https://practica-next-js-teslo-shop.vercel.app/"
      }
    ],
    "repoLink": "https://github.com/EmanuelRigo/Practica-NextJS-teslo-shop"
  },
  "cafeGeisha": {
    "title": "Café de la Geisha",
    "short": "Landing page elegante para una cafetería ficticia.",
    "modal": "Café de la Geisha es una landing page estática diseñada con HTML y CSS. Representa la identidad visual de una cafetería ficticia, presentando sus servicios, personal y datos de contacto en una única página moderna y responsiva. Ideal para desplegar como sitio de presentación comercial.",
    "testUsers": "No se requieren credenciales.",
    "features": [
      "Diseño Moderno: Interfaz atractiva con enfoque visual.",
      "Secciones Descriptivas: Inicio, servicios, personal y contacto.",
      "Lista de Precios: Tabla accesible y clara.",
      "Responsive: Compatible con dispositivos móviles.",
      "Navegación Suave: Menú para desplazamiento fluido.",
      "Totalmente Estático: Fácil de ejecutar en cualquier navegador."
    ],
    "description": "Landing page para cafetería ficticia desarrollada con HTML5 y CSS3.",
    "image": "/images/projects/cafe 00.png",
    "techStack": ["HTML", "CSS"],
    "liveLinks": [
      {
        "label": "Repositorio",
        "url": "https://cafe-one-beige.vercel.app/"
      }
    ],
    "repoLink": "https://github.com/EmanuelRigo/cafe"
  },
  "simuladorViajes": {
    "title": "Simulador de Viajes",
    "short": "Simulá tus viajes, gestioná tu billetera y explorá el mundo.",
    "modal": "Simulador de Viajes es una aplicación frontend que permite a los usuarios gestionar un presupuesto virtual, comprar boletos, explorar destinos y seguir sus viajes. Está desarrollada con HTML, CSS y JavaScript puro, utilizando herramientas como Bootstrap, Toastify-js, Moment.js y OpenWeatherMap para enriquecer la experiencia del usuario.",
    "testUsers": "No requiere credenciales.",
    "features": [
      "Billetera Virtual: Agregá y administrá tu saldo para viajar.",
      "Catálogo de Destinos: Viajá a ciudades disponibles en un archivo JSON local.",
      "Filtros Inteligentes: Mostrá solo viajes accesibles con tu saldo.",
      "Historial de Viajes: Visualizá a dónde fuiste y cuándo.",
      "Estado Actual: Mostrá el clima y la hora en tu destino con OpenWeather y Moment.js.",
      "Persistencia Local: Guardado automático de datos en localStorage."
    ],
    "description": "App interactiva para simular viajes con datos reales y persistencia en el navegador.",
    "image": "/images/projects/travel_simulator.png",
    "techStack": ["HTML", "CSS", "JavaScript", "Bootstrap"],
    "liveLinks": [
      {
        "label": "Repositorio",
        "url": "https://preentrega-coderhouse.vercel.app/"
      }
    ],
    "repoLink": "https://github.com/EmanuelRigo/Preentrega-Coderhouse"
  }
}
